#!/usr/bin/bash

# Development: Clears the console upon running this script
if [[ $1 == "--clear" ]]; then
    clear
fi

# Config files. Changes to the below variables will be applied
# to all occurances in this script
PACKCONFIG="packages.json"
DISTRO_ID="" # This is dynamically manipulated by the below section

##############################################################
# This section of the script checks if JSON Query package is #
# installed and ensures that packages.json has listed the    #
# systems distribution ID                                    #
##############################################################

# Checks if a distributor id was passed in json config file
command -v "jq" &> /dev/null || { printf "Missing dependency: JSON Query package\n" && exit 1; }
distributor_id="$(jq -r '.distributor_id' "$PACKCONFIG")"

if [[ ${#distributor_id} == 0 ]]; then
    printf "Unipack: No distributor_id was passed\n"
    # Detects distributor_id using lsb_release --id
    ( command -v "lsb_release" &> /dev/null && printf "Detecting distributor_id...\n" ) || { printf "Could not detect the system's distributor. Manually assign it to %s\n" "$PACKCONFIG" && exit 1; }

    # Creates a new temp file
    # Redirects the newly edited JSON file to this temp file
    # Replaces "$PACKCONFIG" with the temp file

    trap 'rm -f  "$TMPFILE"' EXIT
    TMPFILE=$(mktemp) || ( printf "Failed to edit %s\n" "$PACKCONFIG" && exit 1 )

    lsb=$(lsb_release --id)
    DISTRO_ID="$(printf "%s" "$lsb" | cut -d " " -f 2 | cut -d ":" -f 2 | xargs)"
    jq --arg d "$DISTRO_ID" '.distributor_id = $d' "$PACKCONFIG" > "$TMPFILE"

    cat "$TMPFILE" > "$PACKCONFIG"
fi

exit 0